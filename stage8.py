# 1712
# 월드전자는 노트북을 제조하고 판매하는 회사이다. 노트북 판매 대수에 상관없이 
# 매년 임대료, 재산세, 보험료, 급여 등 A만원의 고정 비용이 들며, 
# 한 대의 노트북을 생산하는 데에는 재료비와 인건비 등 총 B만원의 가변 비용이 든다고 한다.
# 예를 들어 A=1,000, B=70이라고 하자. 이 경우 노트북을 한 대 생산하는 데는 총 1,070만원이 들며, 
# 열 대 생산하는 데는 총 1,700만원이 든다.
# 노트북 가격이 C만원으로 책정되었다고 한다. 일반적으로 생산 대수를 늘려 가다 보면 
# 어느 순간 총 수입(판매비용)이 총 비용(=고정비용+가변비용)보다 많아지게 된다. 
# 최초로 총 수입이 총 비용보다 많아져 이익이 발생하는 지점을 손익분기점(BREAK-EVEN POINT)이라고 한다.
# A, B, C가 주어졌을 때, 손익분기점을 구하는 프로그램을 작성하시오.
# 첫째 줄에 A, B, C가 빈 칸을 사이에 두고 순서대로 주어진다. A, B, C는 21억 이하의 자연수이다.
# 첫 번째 줄에 손익분기점 즉 최초로 이익이 발생하는 판매량을 출력한다. 손익분기점이 존재하지 않으면 -1을 출력한다.
'''
a,b,c = map(int, input().split())
BREAK_EVEN_POINT = 0 # 손익 분기점
if c <= b: # 손익 분기점이 존재하지 않을 때
    BREAK_EVEN_POINT = -1
else: # 손익 분기점이 존재할 때
    BREAK_EVEN_POINT = a//(c-b) + 1
print(BREAK_EVEN_POINT)

# 2839
# 상근이는 요즘 설탕공장에서 설탕을 배달하고 있다. 
# 상근이는 지금 사탕가게에 설탕을 정확하게 N킬로그램을 배달해야 한다. 
# 설탕공장에서 만드는 설탕은 봉지에 담겨져 있다. 봉지는 3킬로그램 봉지와 5킬로그램 봉지가 있다.
# 상근이는 귀찮기 때문에, 최대한 적은 봉지를 들고 가려고 한다. 
# 예를 들어, 18킬로그램 설탕을 배달해야 할 때, 3킬로그램 봉지 6개를 가져가도 되지만, 
# 5킬로그램 3개와 3킬로그램 1개를 배달하면, 더 적은 개수의 봉지를 배달할 수 있다.
# 상근이가 설탕을 정확하게 N킬로그램 배달해야 할 때, 
# 봉지 몇 개를 가져가면 되는지 그 수를 구하는 프로그램을 작성하시오.
# 첫째 줄에 N이 주어진다. (3 ≤ N ≤ 5000)
# 상근이가 배달하는 봉지의 최소 개수를 출력한다. 만약, 정확하게 N킬로그램을 만들 수 없다면 -1을 출력한다.

# 틀린 문제
def sugar(n):
    bag = 0
    while True:
        if n%5 == 0:
            bag = bag + (n//5)
            return bag
        n -= 3
        bag += 1
        if n < 0:
            return -1
print(sugar(int(input())))

# 2292
# 위의 그림과 같이 육각형으로 이루어진 벌집이 있다. 
# 그림에서 보는 바와 같이 중앙의 방 1부터 시작해서 이웃하는 방에 돌아가면서 1씩 증가하는 번호를 주소로 매길 수 있다. 
# 숫자 N이 주어졌을 때, 벌집의 중앙 1에서 N번 방까지 최소 개수의 방을 지나서 갈 때 몇 개의 방을 지나가는지
# (시작과 끝을 포함하여)를 계산하는 프로그램을 작성하시오. 예를 들면, 13까지는 3개, 58까지는 5개를 지난다.
# 첫째 줄에 N(1 ≤ N ≤ 1,000,000,000)이 주어진다.
# 입력으로 주어진 방까지 최소 개수의 방을 지나서 갈 때 몇 개의 방을 지나는지 출력한다.
bh = []
n = int(input())
i = 1
while True:
    # an = 3n(n-1)+1 / an-1 = 3(n-1)(n-2)+1
    final = (3*i*(i-1))+1
    bh.append(final)
    if n <= final:
        break
    i+=1
print(len(bh))
'''
# # 1193
# 이와 같이 나열된 분수들을 1/1 -> 1/2 -> 2/1 -> 3/1 -> 2/2 -> … 과 같은 지그재그 순서로 차례대로 
# 1번, 2번, 3번, 4번, 5번, … 분수라고 하자.
# X가 주어졌을 때, X번째 분수를 구하는 프로그램을 작성하시오.
# 첫째 줄에 X(1 ≤ X ≤ 10,000,000)가 주어진다.
# 첫째 줄에 분수를 출력한다.

# n,ls = int(input()),[]
# for i in range(1,4473):
#     if i%2 == 0:
#         ls += [j for j in range(1, i+1)]
#     else:
#         ls += [j for j in range(i, 0, -1)]
#     if len(ls) >= n:
#         print(f"{ls[n-1]}/{i+1-ls[n-1]}")
#         break

n,i= int(input()),1
while n > i:
    n -= i
    i += 1
if i%2 == 0:
    print(f"{n}/{i+1-n}")
else:
    print(f"{i+1-n}/{n}")
    
    





